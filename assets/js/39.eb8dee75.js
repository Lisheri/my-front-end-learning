(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{547:function(t,s,a){t.exports=a.p+"assets/img/rootVnode.14d9c330.png"},740:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"reconciler-触发更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reconciler-触发更新"}},[t._v("#")]),t._v(" reconciler - 触发更新")]),t._v(" "),n("h2",{attrs:{id:"常见触发更新的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见触发更新的方式"}},[t._v("#")]),t._v(" 常见触发更新的方式")]),t._v(" "),n("ul",[n("li",[t._v("ReactDOM.createRoot().render")]),t._v(" "),n("li",[t._v("this.setState")]),t._v(" "),n("li",[t._v("useState中的dispatch方法")])]),t._v(" "),n("p",[t._v("其实我们更加希望的是能够实现一套统一的更新机制:")]),t._v(" "),n("ul",[n("li",[t._v("兼容上述触发更新的方式")]),t._v(" "),n("li",[t._v("便于后续扩展")])]),t._v(" "),n("h2",{attrs:{id:"更新机制的组成部分"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新机制的组成部分"}},[t._v("#")]),t._v(" 更新机制的组成部分")]),t._v(" "),n("ul",[n("li",[t._v("代表更新的数据结构 - Update")]),t._v(" "),n("li",[t._v("消费 update 的数据结构 - updateQueue(这一点, Vue的更新队列其实也是类似的)")])]),t._v(" "),n("h2",{attrs:{id:"调用setstate的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#调用setstate的方式"}},[t._v("#")]),t._v(" 调用setState的方式")]),t._v(" "),n("p",[t._v("调用setState的方式有两种")]),t._v(" "),n("ul",[n("li",[t._v("直接传入新的state")]),t._v(" "),n("li",[t._v("传入回调函数, 回调函数参数接收修改前的state, 执行结果为新的state")])]),t._v(" "),n("h2",{attrs:{id:"更新队列实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新队列实现"}},[t._v("#")]),t._v(" 更新队列实现")]),t._v(" "),n("p",[t._v("为了对上述更新方式做处理, 同时兼容更新的数据结构, 实现方式如下:")]),t._v(" "),n("div",{staticClass:"language-ts line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新队列")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Action "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@mini-react/shared"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Update数据结构")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Update"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发更新的函数")]),t._v("\n  action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ------------------------------- React触发更新的方式 ------------------------------------------")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于React有两种触发更新的方式")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不仅可以传一个状态的最新值, 还可以传一个函数, 返回值表示最新的状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因此 Action 要处理下面两种形式")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.setState({xx:1})和this.setState(() => ({xx:2}))")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ------------------------------- React触发更新的方式 ------------------------------------------")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UpdateQueue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  shared"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pending"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 update")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" createUpdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    action\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 updateQueue")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" createUpdateQueue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    shared"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      pending"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" UpdateQueue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 往updateQueue中添加update")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" enqueueUpdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  updateQueue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  update"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Action"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  updateQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pending "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UpdateQueue消费Update的方法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个方法接收一个初始状态以及需要消费的update")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" processUpdateQueue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  baseState"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" State"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  pendingUpdate"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" memorizedState"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" State "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReturnType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" processUpdateQueue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("State"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    memorizedState"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" baseState\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ---------------------- 消费过程 ------------------------------")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有两种消费的情况")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果pendingUpdate存在")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pendingUpdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// baseUpdate: 1, update: 2 -> memorizedState: 2")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// baseUpdate: 1, update: x => 2*x -> memorizedState: update(baseUpdate)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pendingUpdate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Function")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// action为函数, 对应第二种类型")]),t._v("\n      result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memorizedState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("action")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("baseState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则memorizedState 就是 action本身(也就是传入setState的参数)")]),t._v("\n      result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memorizedState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br")])]),n("h2",{attrs:{id:"需要考虑的事情"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#需要考虑的事情"}},[t._v("#")]),t._v(" 需要考虑的事情")]),t._v(" "),n("ul",[n("li",[t._v("更新可能发生于任意组件, 而更新的流程是从根节点递归的")]),t._v(" "),n("li",[t._v("需要一个统一的根节点保存通用信息")])]),t._v(" "),n("p",[t._v("比如:")]),t._v(" "),n("div",{staticClass:"language-tsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-tsx"}},[n("code",[t._v("ReactDOM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRoot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RootElement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("在调用 "),n("code",[t._v("ReactDOM.createRoot(RootElement)")]),t._v(" 就会创建一个当前应用的统一根节点, 也就是 "),n("code",[t._v("fiberRootNode")])]),t._v(" "),n("p",[t._v("传入的DOM, "),n("code",[t._v("RootElement")]),t._v("也有自己对应的 FiberNode, 也就是 "),n("code",[t._v("hostRootFiber")])]),t._v(" "),n("p",[t._v("在 "),n("code",[t._v("fiberRootNode")]),t._v(" 和 "),n("code",[t._v("hostRootFiber")]),t._v("之间通过 "),n("code",[t._v("current")]),t._v(" 以及 "),n("code",[t._v("stateNode")]),t._v(" 指针连接")]),t._v(" "),n("p",[t._v("最后执行 render 方法传入一个"),n("code",[t._v("<App/>")]),t._v("组件, 会生成 App对应的 FiberNode, "),n("code",[t._v("AppFiberNode")]),t._v(" 和 "),n("code",[t._v("hostRootFiber")]),t._v("之间通过 "),n("code",[t._v("child")]),t._v("和"),n("code",[t._v("return")]),t._v("连接")]),t._v(" "),n("p",[n("img",{attrs:{src:a(547),alt:"根节点"}})]),t._v(" "),n("blockquote",[n("p",[t._v("React也是通过FiberNode节点间的这些连接, 去实现的从发生更新的组件, 遍历到根节点, 在进行递归更新")])]),t._v(" "),n("h2",{attrs:{id:"fiberrootnode-实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fiberrootnode-实现"}},[t._v("#")]),t._v(" fiberRootNode 实现")]),t._v(" "),n("div",{staticClass:"language-ts line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 应用入口对应的FiberNode")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FiberRootNode")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ? 对应宿主环境的挂载点, 也就是 rootElement, 使用中常用的 <div id="app"></div>')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ? 不过这里并不能直接设置为DOM Element, 而是应该采用更抽象的类型, 因为React并不仅是为web端服务")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" container"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ? 指向 hostRootFiber, 也是一个 FiberNode")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ? 指向更新完成后的 hostRootFiber")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" finishedWork"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("container"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hostRootFiber"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("container "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hostRootFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hostRootFiber 通过 stateNode 与 FiberRootNode 建立连接")]),t._v("\n    hostRootFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finishedWork "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])]),n("h2",{attrs:{id:"mount更新流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mount更新流程"}},[t._v("#")]),t._v(" mount更新流程")]),t._v(" "),n("h3",{attrs:{id:"mount更新的目的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mount更新的目的"}},[t._v("#")]),t._v(" mount更新的目的:")]),t._v(" "),n("ul",[n("li",[t._v("生成 workInProgress FiberNode树")]),t._v(" "),n("li",[t._v("标记副作用flags")])]),t._v(" "),n("h3",{attrs:{id:"更新流程步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新流程步骤"}},[t._v("#")]),t._v(" 更新流程步骤")]),t._v(" "),n("ul",[n("li",[t._v("递: beginWork\n"),n("ul",[n("li",[t._v("HostRoot:\n"),n("ol",[n("li",[t._v("计算状态最新值")]),t._v(" "),n("li",[t._v("创建子fiberNode")])])]),t._v(" "),n("li",[t._v("updateHostComponents(不会触发更新)\n"),n("ol",[n("li",[t._v("只会创建子fiberNode")])])])])]),t._v(" "),n("li",[t._v("归: completeWork")])]),t._v(" "),n("h2",{attrs:{id:"beginwork-流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beginwork-流程"}},[t._v("#")]),t._v(" beginWork 流程")]),t._v(" "),n("p",[t._v("以如下节点为例:")]),t._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("B")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("当进入A的beginWork时, 通过对比B的current fiberNode与B的ReactElement, 生成B的wip fiberNode")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("beginWork")]),t._v("过程中, 最多会标记两类与"),n("code",[t._v("结构变化")]),t._v("相关的flags:")]),t._v(" "),n("ul",[n("li",[t._v("Placement\n"),n("ul",[n("li",[t._v("插入: a -> ab")]),t._v(" "),n("li",[t._v("移动: abc -> acb")])])]),t._v(" "),n("li",[t._v("ChildDeletion\n"),n("ul",[n("li",[t._v("删除: abc -> ab")])])])]),t._v(" "),n("blockquote",[n("p",[t._v("注: 这个过程中不会包含与属性变化相关的"),n("code",[t._v("flag: Update")])])]),t._v(" "),n("h3",{attrs:{id:"优化策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化策略"}},[t._v("#")]),t._v(" 优化策略")]),t._v(" "),n("p",[t._v("考虑如下结构的ReactElement")]),t._v(" "),n("div",{staticClass:"language-tsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-tsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("练习时长")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("两年半")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("理论上mount后包含的flags:")]),t._v(" "),n("ul",[n("li",[t._v("两年半 Placement")]),t._v(" "),n("li",[t._v("span Placement")]),t._v(" "),n("li",[t._v("练习时长 Placement")]),t._v(" "),n("li",[t._v("p Placement")]),t._v(" "),n("li",[t._v("div Placement")])]),t._v(" "),n("p",[t._v("相比于执行5次 Placement 这种多次插入DOM的方式, 我们有一个优化策略:")]),t._v(" "),n("p",[t._v("我们先构建好一棵"),n("code",[t._v("离屏DOM树")]),t._v(", 对div执行一次Placement操作")]),t._v(" "),n("p",[t._v("在这棵离屏DOM树中, 内部的节点已经提前构建好了, 只需要对div执行一次Placement操作, 就可以将整棵树插入到DOM节点中")])])}),[],!1,null,null,null);s.default=e.exports}}]);