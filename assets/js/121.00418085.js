(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{656:function(t,a,v){"use strict";v.r(a);var _=v(5),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"snabbdom源码解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#snabbdom源码解析"}},[t._v("#")]),t._v(" Snabbdom源码解析")]),t._v(" "),v("p",[t._v("Vue中的虚拟DOM是通过改造Snabbdom实现的, 因此优先看Snabbdom, 就基本可以了解到Vue中的VNode实现原理, 便于进一步的学习")]),t._v(" "),v("p",[t._v("掌握h init patch是如何工作的")]),t._v(" "),v("h2",{attrs:{id:"学习源码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#学习源码"}},[t._v("#")]),t._v(" 学习源码")]),t._v(" "),v("ul",[v("li",[t._v("宏观了解")]),t._v(" "),v("li",[t._v("带着目标看源码（目标不需要那么大）")]),t._v(" "),v("li",[t._v("看源码的过程要不求甚解 (要围绕核心目标, 代码分支逻辑会很多, 容易干扰源码观看, 主要需要看的是主线逻辑)")]),t._v(" "),v("li",[t._v("调试")]),t._v(" "),v("li",[t._v("参考资料(多参考文章, 提升阅读效率)")])]),t._v(" "),v("h2",{attrs:{id:"snabbdom的核心"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#snabbdom的核心"}},[t._v("#")]),t._v(" Snabbdom的核心")]),t._v(" "),v("ul",[v("li",[t._v("init() 设置模块, 创建 "),v("code",[t._v("patch")]),t._v(" 函数")]),t._v(" "),v("li",[t._v("使用 h 函数创建 js对象(VNode) 描述真实DOM")]),t._v(" "),v("li",[t._v("patch 比较新旧两个Vnode")]),t._v(" "),v("li",[t._v("把变化的内容更新到真实DOM树")])])])}),[],!1,null,null,null);a.default=s.exports}}]);