(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{628:function(a,t,v){"use strict";v.r(t);var _=v(5),e=Object(_.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"脚手架工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#脚手架工具"}},[a._v("#")]),a._v(" 脚手架工具")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[a._v("———— 前端工程化的发起者\n")])])]),v("h2",{attrs:{id:"简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[a._v("#")]),a._v(" 简介")]),a._v(" "),v("p",[a._v("可以简单理解为自动的创建项目基础文件的一种工具, 看似普通的需求, 但是他还需要提供给开发者一些约定和规范")]),a._v(" "),v("p",[a._v("本质: 创建项目基础架构、提供项目规范和约定")]),a._v(" "),v("p",[a._v("一个团队开发项目, 我们需要有:")]),a._v(" "),v("ul",[v("li",[a._v("相同的组织结构")]),a._v(" "),v("li",[a._v("相同的开发范式")]),a._v(" "),v("li",[a._v("相同的模块依赖")]),a._v(" "),v("li",[a._v("相同的工具配置")]),a._v(" "),v("li",[a._v("相同的基础代码")])]),a._v(" "),v("p",[a._v("如果自己搭建项目, 那么在项目初期, 我们就有大量的重复工作要做, 但是有了脚手架, 我们就可以快速搭建特定项目的骨架, 然后基于这个骨架进行后续开发工作。")]),a._v(" "),v("p",[a._v("实际上visual studio或者idea这样大型的IDE创建项目的流程就是一个脚手架的工作流程")]),a._v(" "),v("p",[a._v("但是在前端项目中, 由于前端技术选型多样, 并且没有一个统一的标准, 所以前端方向的脚手架一般不会集成在某一个IDE当中, 都是以一个独立的工具存在, 并且相对会复杂一些")]),a._v(" "),v("p",[a._v("本质上脚手架的目标都是一样的, 都是为了解决项目创建过程中的复杂工作")]),a._v(" "),v("h2",{attrs:{id:"常用脚手架工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用脚手架工具"}},[a._v("#")]),a._v(" 常用脚手架工具")]),a._v(" "),v("p",[a._v("目前市面上有很多脚手架工具, 但是他们大都是为了特定的项目服务的, 比如React 项目 --\x3e create-react-app, Vue.js --\x3e vue-cli, angular.js --\x3e angular-cli")]),a._v(" "),v("p",[a._v("不过他们都只适合自身所在的项目")]),a._v(" "),v("p",[a._v("还有一些比如Yeoman代表的通用性项目脚手架工具, 他可以根据一套模板, 生成一套对应地项目解构")]),a._v(" "),v("p",[a._v("还有一种叫Plop, 用来在项目开发过程中用于创建一些特定类型的文件, 例如在组件化开发的项目中创建新的组件, 或者模块化开发的项目中创建新的模块, 这些模块和组件都是由特定的几个文件组成的, 并且每个文件都有特定的代码解构, 比起我们自己一个一个去创建的话, 脚手架可以提供更稳定更便捷的创建方式。")])])}),[],!1,null,null,null);t.default=e.exports}}]);