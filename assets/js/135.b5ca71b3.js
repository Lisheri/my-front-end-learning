(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{722:function(t,s,a){"use strict";a.r(s);var v=a(5),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js类型系统特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js类型系统特征"}},[t._v("#")]),t._v(" JS类型系统特征")]),t._v(" "),a("p",[t._v("js缺失类型系统可靠性(不靠谱)")]),t._v(" "),a("h2",{attrs:{id:"原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),a("p",[t._v("早期js应用很简单, 没有预料到如此大的应用量")]),t._v(" "),a("p",[t._v("js一般情况下没有编译环节")]),t._v(" "),a("h2",{attrs:{id:"弱类型的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弱类型的问题"}},[t._v("#")]),t._v(" 弱类型的问题")]),t._v(" "),a("p",[t._v("由于前端工程化不断变大，js的优势也就成了短板")]),t._v(" "),a("ul",[a("li",[t._v("缺乏编译时的报错, 导致代码的抛错必须在运行时才能抛出来")]),t._v(" "),a("li",[t._v("字符串+数字 会变成字符串, 容易造成bug, 因为后端传过来的值有时候不一定会遵守约定")]),t._v(" "),a("li",[t._v("不满足类型要求的索引也可以被执行, 容易造成理解错误")])]),t._v(" "),a("h2",{attrs:{id:"强类型的优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强类型的优势"}},[t._v("#")]),t._v(" 强类型的优势")]),t._v(" "),a("ul",[a("li",[t._v("编码阶段提前消灭类型异常")]),t._v(" "),a("li",[t._v("代码更智能，编码更准确。由于不清楚一个对象中的成员, 因此不知道该提示什么")]),t._v(" "),a("li",[t._v("重构更牢靠")]),t._v(" "),a("li",[t._v("减少不必要的类型判断")])])])}),[],!1,null,null,null);s.default=_.exports}}]);