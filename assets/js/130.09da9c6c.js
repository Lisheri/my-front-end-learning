(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{689:function(e,t,v){"use strict";v.r(t);var _=v(5),l=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"组件化回顾"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组件化回顾"}},[e._v("#")]),e._v(" 组件化回顾")]),e._v(" "),v("p",[e._v("组件化是Vue中非常重要的概念, Vue的核心组成就是"),v("code",[e._v("数据绑定")]),e._v("与"),v("code",[e._v("组件化")])]),e._v(" "),v("ul",[v("li",[e._v("一个Vue组件就是一个拥有预定义选项的一个Vue实例")]),e._v(" "),v("li",[e._v("一个组件可以组成页面上一个功能完备的区域, 组件可以包含"),v("code",[e._v("脚本")]),e._v(", "),v("code",[e._v("样式")]),e._v(", "),v("code",[e._v("模板")])]),e._v(" "),v("li",[e._v("组件内部可以继续嵌套组件, 最终组合成一个页面")]),e._v(" "),v("li",[e._v("组件化可以方便的让开发人员将一个页面拆分为一个一个的组件, 使用组件可以方便的复用页面上某一个区域")]),e._v(" "),v("li",[e._v("组件间可以嵌套")])])])}),[],!1,null,null,null);t.default=l.exports}}]);