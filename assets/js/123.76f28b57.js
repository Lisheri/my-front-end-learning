(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{658:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"patch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#patch"}},[t._v("#")]),t._v(" patch")]),t._v(" "),a("p",[t._v("patch 函数主要就是将 VNode 渲染成真实 dom")]),t._v(" "),a("h2",{attrs:{id:"patch-整体执行过程分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#patch-整体执行过程分析"}},[t._v("#")]),t._v(" patch 整体执行过程分析")]),t._v(" "),a("p",[t._v("patch 函数在 init 函数中定义, 这个函数俗称打补丁, 主要对比新旧节点的差异, 然后将差异更新到真实节点中, 而寻找差异这个过程, 也就是尝说的"),a("code",[t._v("diff算法")])]),t._v(" "),a("ul",[a("li",[t._v("patch(oldVnode, newVnode)")]),t._v(" "),a("li",[t._v("把新节点中变化的内容渲染到真实 DOM, 最后返回新节点作为下一次处理的旧节点")]),t._v(" "),a("li",[t._v("对比新旧 VNode 是否相同节点(节点的 key 和 sel 相同)")]),t._v(" "),a("li",[t._v("如果不是相同节点, 删除之前的内容, 重新渲染")]),t._v(" "),a("li",[t._v("如果是相同节点, 在判断新的 VNode 是否有 text, 如果有并且和 oldVnode 的 text 不同, 直接更新文本内容")]),t._v(" "),a("li",[t._v("如果新的 VNode 有 children, 判断子节点是否有变化")])]),t._v(" "),a("h2",{attrs:{id:"init-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init-函数"}},[t._v("#")]),t._v(" init 函数")]),t._v(" "),a("p",[t._v("在之前的案例中, 使用 patch 函数的之前, 都是先调用 init 函数, 执行后返回了一个 patch 函数。")]),t._v(" "),a("p",[t._v("因此, 在看 patch 函数之前, 需要先查看 init 函数中做了哪些工作。")]),t._v(" "),a("ol",[a("li",[t._v("首先导入了一些后面要使用的模块")]),t._v(" "),a("li",[t._v("然后定义了一些类型和辅助函数(判断类型等)")]),t._v(" "),a("li",[t._v("定义了生命周期钩子的数组, 将会在 init 中初始化, 然后在特定的时刻触发")]),t._v(" "),a("li",[t._v("init")])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modules"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Partial"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Module"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" domApi"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOMAPI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("init 函数有两个参数, 一个是 modules, 一个是 domApi，但是在之前用 snabbdom 做案例的时候, 只给 init 传过一个参数, 那就是 modules")]),t._v(" "),a("p",[a("code",[t._v("modules")]),t._v("是模块数组, 之前用过 snabbdom 提供的模块, 用于处理元素的行内样式和注册事件, 之前并没有传递第二个参数"),a("code",[t._v("domApi")])]),t._v(" "),a("p",[a("code",[t._v("domApi")]),t._v(", 主要是用于将 VNode 对象转换为其他平台下对应的元素, 在没有传递的情况下, 默认设置成 dom 操作的 api(这也是虚拟 dom 最大的好处 ———— 跨平台)")]),t._v(" "),a("h3",{attrs:{id:"init-详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init-详解"}},[t._v("#")]),t._v(" init 详解")]),t._v(" "),a("ol",[a("li",[t._v("定义 cbs")])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化cbs(callbacks回调函数)， 这里面存储的就是模块中的钩子函数, 在合适的时机去执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象的键名和上面的hooks成员一致")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cbs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ModuleHooks "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    create"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    remove"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    destroy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    pre"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    post"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("处理平台 api")])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若没有指定domApi, 则使用htmlDomApi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// htmlDomApi中初始化了一些方法, 这些方法都是用于操作dom元素的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" api"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOMAPI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" domApi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" domApi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" htmlDomApi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("初始化 cbs")])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 双层循环初始化cbs")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hook "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" modules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" currentHook "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只要module中包含当前钩子, 则将其添加到cbs对应的钩子数组中")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentHook "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cbs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentHook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("接下来定义了一系列的辅助函数, 暂时先不看")]),t._v(" "),a("li",[t._v("最后就是返回了一个patch函数")])]),t._v(" "),a("p",[t._v("整个init函数, 其实就是一个高阶函数, 也就是一个函数返回另一个函数")]),t._v(" "),a("p",[t._v("这样做的好处就是, 让patch函数的入参变少了, 本来需要四个参数, modules, oldApi, olvVnode和newVnode, 但是现在只需要两个, 那就是oldVnode和newVnode, 前两个参数都前置处理了")]),t._v(" "),a("p",[t._v("其实这样的高阶函数, 也叫函数柯里化")]),t._v(" "),a("p",[t._v("由于patch函数需要经常调用, 因此在这里, 先处理前两个参数, 并且缓存起来(因为形成了闭包), 在后面多次使用的时候, 都不用反复处理, 这样的优势更明显, 在之后的vue源码中, 这样的多层柯里化还还很多")]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("path函数过程")])])])}),[],!1,null,null,null);s.default=e.exports}}]);